{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PC/Documents/GIT%20Projects/Spenda/components/ui/Sidebar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\n\r\ninterface NavItem {\r\n  id: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  href: string;\r\n}\r\n\r\nconst navItems: NavItem[] = [\r\n  {\r\n    id: 'dashboard',\r\n    label: 'Dashboard',\r\n    href: '/',\r\n    icon: (\r\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    id: 'items',\r\n    label: 'My Items',\r\n    href: '/items',\r\n    icon: (\r\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    id: 'search',\r\n    label: 'Search',\r\n    href: '/search',\r\n    icon: (\r\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    id: 'settings',\r\n    label: 'Settings',\r\n    href: '/settings',\r\n    icon: (\r\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface SidebarProps {\r\n  isCollapsed: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nexport default function Sidebar({ isCollapsed, onToggle }: SidebarProps) {\r\n  const pathname = usePathname();\r\n\r\n  return (\r\n    <div className={`fixed left-0 top-0 h-full glass border-r border-gray-800/50 z-40 transition-all duration-300 ${\r\n      isCollapsed ? 'w-20' : 'w-64'\r\n    }`}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between p-6 border-b border-gray-800/50\">\r\n        <div className={`flex items-center space-x-3 ${isCollapsed ? 'hidden' : 'block'}`}>\r\n          <div className=\"w-8 h-8 rounded-lg bg-gradient-to-r from-[var(--neon-blue)] to-[var(--neon-purple)] flex items-center justify-center\">\r\n            <span className=\"text-white font-bold text-lg font-[Orbitron]\">S</span>\r\n          </div>\r\n          <h1 className=\"text-xl font-bold font-[Orbitron] bg-gradient-to-r from-[var(--neon-blue)] to-[var(--neon-purple)] bg-clip-text text-transparent\">\r\n            SPENDA\r\n          </h1>\r\n        </div>\r\n        <button\r\n          onClick={onToggle}\r\n          className=\"p-2 rounded-lg hover:bg-gray-800/50 transition-colors\"\r\n        >\r\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <nav className=\"p-4 space-y-2\">\r\n        {navItems.map((item) => {\r\n          const isActive = pathname === item.href;\r\n          \r\n          return (\r\n            <Link\r\n              key={item.id}\r\n              href={item.href}\r\n              className={`flex items-center space-x-3 p-3 rounded-lg transition-all duration-200 group ${\r\n                isActive\r\n                  ? 'bg-gradient-to-r from-[var(--neon-blue)]/20 to-[var(--neon-purple)]/20 border border-[var(--neon-blue)]/30 glow-blue'\r\n                  : 'hover:bg-gray-800/50 hover:border-gray-700/50 border border-transparent'\r\n              }`}\r\n            >\r\n              <div className={`${isActive ? 'text-[var(--neon-blue)]' : 'text-gray-400 group-hover:text-white'} transition-colors`}>\r\n                {item.icon}\r\n              </div>\r\n              {!isCollapsed && (\r\n                <span className={`font-medium ${\r\n                  isActive ? 'text-white' : 'text-gray-300 group-hover:text-white'\r\n                } transition-colors`}>\r\n                  {item.label}\r\n                </span>\r\n              )}\r\n            </Link>\r\n          );\r\n        })}\r\n      </nav>\r\n\r\n      {/* Footer */}\r\n      <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-gray-800/50\">\r\n        <div className={`flex items-center space-x-3 ${isCollapsed ? 'justify-center' : ''}`}>\r\n          <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-[var(--neon-green)] to-[var(--neon-blue)] flex items-center justify-center\">\r\n            <span className=\"text-white text-sm font-medium\">U</span>\r\n          </div>\r\n          {!isCollapsed && (\r\n            <div>\r\n              <p className=\"text-sm font-medium text-white\">User</p>\r\n              <p className=\"text-xs text-gray-400\">Premium Plan</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAaA,MAAM,WAAsB;IAC1B;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,oBACE,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;sBACjE,cAAA,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;;;;;;IAG3E;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,oBACE,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;sBACjE,cAAA,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;;;;;;IAG3E;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,oBACE,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;sBACjE,cAAA,8OAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,aAAa;gBAAG,GAAE;;;;;;;;;;;IAG3E;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,oBACE,8OAAC;YAAI,WAAU;YAAU,MAAK;YAAO,QAAO;YAAe,SAAQ;;8BACjE,8OAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;8BACrE,8OAAC;oBAAK,eAAc;oBAAQ,gBAAe;oBAAQ,aAAa;oBAAG,GAAE;;;;;;;;;;;;IAG3E;CACD;AAOc,SAAS,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAgB;IACrE,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,8OAAC;QAAI,WAAW,CAAC,6FAA6F,EAC5G,cAAc,SAAS,QACvB;;0BAEA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAW,CAAC,4BAA4B,EAAE,cAAc,WAAW,SAAS;;0CAC/E,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAK,WAAU;8CAA+C;;;;;;;;;;;0CAEjE,8OAAC;gCAAG,WAAU;0CAAmI;;;;;;;;;;;;kCAInJ,8OAAC;wBACC,SAAS;wBACT,WAAU;kCAEV,cAAA,8OAAC;4BAAI,WAAU;4BAAU,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCACjE,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAa;gCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;0BAM3E,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC;oBACb,MAAM,WAAW,aAAa,KAAK,IAAI;oBAEvC,qBACE,8OAAC,4JAAA,CAAA,UAAI;wBAEH,MAAM,KAAK,IAAI;wBACf,WAAW,CAAC,6EAA6E,EACvF,WACI,yHACA,2EACJ;;0CAEF,8OAAC;gCAAI,WAAW,GAAG,WAAW,4BAA4B,uCAAuC,kBAAkB,CAAC;0CACjH,KAAK,IAAI;;;;;;4BAEX,CAAC,6BACA,8OAAC;gCAAK,WAAW,CAAC,YAAY,EAC5B,WAAW,eAAe,uCAC3B,kBAAkB,CAAC;0CACjB,KAAK,KAAK;;;;;;;uBAfV,KAAK,EAAE;;;;;gBAoBlB;;;;;;0BAIF,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAW,CAAC,4BAA4B,EAAE,cAAc,mBAAmB,IAAI;;sCAClF,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAK,WAAU;0CAAiC;;;;;;;;;;;wBAElD,CAAC,6BACA,8OAAC;;8CACC,8OAAC;oCAAE,WAAU;8CAAiC;;;;;;8CAC9C,8OAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnD","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PC/Documents/GIT%20Projects/Spenda/components/MainLayout.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport Sidebar from './ui/Sidebar';\r\n\r\ninterface MainLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function MainLayout({ children }: MainLayoutProps) {\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-[#0a0a0f] via-[#1a1a2e] to-[#16213e]\">\r\n      <Sidebar \r\n        isCollapsed={sidebarCollapsed} \r\n        onToggle={() => setSidebarCollapsed(!sidebarCollapsed)} \r\n      />\r\n      \r\n      <main className={`transition-all duration-300 ${\r\n        sidebarCollapsed ? 'ml-20' : 'ml-64'\r\n      } min-h-screen`}>\r\n        <div className=\"p-8\">\r\n          {children}\r\n        </div>\r\n      </main>\r\n      \r\n      {/* Background Effects */}\r\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden z-0\">\r\n        <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-[var(--neon-blue)] rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse\" />\r\n        <div className=\"absolute top-3/4 right-1/4 w-64 h-64 bg-[var(--neon-purple)] rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse\" style={{ animationDelay: '1s' }} />\r\n        <div className=\"absolute bottom-1/4 left-1/2 w-64 h-64 bg-[var(--neon-green)] rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse\" style={{ animationDelay: '2s' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASe,SAAS,WAAW,EAAE,QAAQ,EAAmB;IAC9D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAO;gBACN,aAAa;gBACb,UAAU,IAAM,oBAAoB,CAAC;;;;;;0BAGvC,8OAAC;gBAAK,WAAW,CAAC,4BAA4B,EAC5C,mBAAmB,UAAU,QAC9B,aAAa,CAAC;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACZ;;;;;;;;;;;0BAKL,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;wBAAuI,OAAO;4BAAE,gBAAgB;wBAAK;;;;;;kCACpL,8OAAC;wBAAI,WAAU;wBAAwI,OAAO;4BAAE,gBAAgB;wBAAK;;;;;;;;;;;;;;;;;;AAI7L","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PC/Documents/GIT%20Projects/Spenda/components/Dashboard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  subtitle?: string;\r\n  icon: React.ReactNode;\r\n  glowColor: 'blue' | 'purple' | 'green' | 'orange';\r\n  trend?: {\r\n    value: number;\r\n    isPositive: boolean;\r\n  };\r\n}\r\n\r\nconst MetricCard: React.FC<MetricCardProps> = ({ \r\n  title, \r\n  value, \r\n  subtitle, \r\n  icon, \r\n  glowColor,\r\n  trend \r\n}) => {\r\n  const glowClass = `glow-${glowColor}`;\r\n  \r\n  return (\r\n    <div className={`glass rounded-xl p-6 ${glowClass} hover:scale-105 transition-transform duration-300 animate-slide-in`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className={`p-3 rounded-lg bg-gradient-to-r ${\r\n          glowColor === 'blue' ? 'from-[var(--neon-blue)]/20 to-[var(--neon-blue)]/10' :\r\n          glowColor === 'purple' ? 'from-[var(--neon-purple)]/20 to-[var(--neon-purple)]/10' :\r\n          glowColor === 'green' ? 'from-[var(--neon-green)]/20 to-[var(--neon-green)]/10' :\r\n          'from-[var(--neon-orange)]/20 to-[var(--neon-orange)]/10'\r\n        }`}>\r\n          <div className={`${\r\n            glowColor === 'blue' ? 'text-[var(--neon-blue)]' :\r\n            glowColor === 'purple' ? 'text-[var(--neon-purple)]' :\r\n            glowColor === 'green' ? 'text-[var(--neon-green)]' :\r\n            'text-[var(--neon-orange)]'\r\n          }`}>\r\n            {icon}\r\n          </div>\r\n        </div>\r\n        {trend && (\r\n          <div className={`flex items-center space-x-1 text-sm ${\r\n            trend.isPositive ? 'text-green-400' : 'text-red-400'\r\n          }`}>\r\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path \r\n                strokeLinecap=\"round\" \r\n                strokeLinejoin=\"round\" \r\n                strokeWidth={2} \r\n                d={trend.isPositive ? \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" : \"M13 17h8m0 0V9m0 8l-8-8-4 4-6-6\"} \r\n              />\r\n            </svg>\r\n            <span>{Math.abs(trend.value)}%</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <h3 className=\"text-2xl font-bold font-[Orbitron] text-white mb-1\">{value}</h3>\r\n        <p className=\"text-gray-400 text-sm font-medium\">{title}</p>\r\n        {subtitle && (\r\n          <p className=\"text-gray-500 text-xs mt-1\">{subtitle}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface ProgressRingProps {\r\n  progress: number;\r\n  size: number;\r\n  strokeWidth: number;\r\n  color: string;\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst ProgressRing: React.FC<ProgressRingProps> = ({ \r\n  progress, \r\n  size, \r\n  strokeWidth, \r\n  color, \r\n  label, \r\n  value \r\n}) => {\r\n  const radius = (size - strokeWidth) / 2;\r\n  const circumference = radius * 2 * Math.PI;\r\n  const offset = circumference - (progress / 100) * circumference;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <div className=\"relative\">\r\n        <svg width={size} height={size} className=\"transform -rotate-90\">\r\n          {/* Background circle */}\r\n          <circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke=\"#2d2d44\"\r\n            strokeWidth={strokeWidth}\r\n            fill=\"transparent\"\r\n          />\r\n          {/* Progress circle */}\r\n          <circle\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            stroke={color}\r\n            strokeWidth={strokeWidth}\r\n            fill=\"transparent\"\r\n            strokeDasharray={circumference}\r\n            strokeDashoffset={offset}\r\n            strokeLinecap=\"round\"\r\n            className=\"transition-all duration-1000 ease-out\"\r\n            style={{\r\n              filter: `drop-shadow(0 0 10px ${color}40)`\r\n            }}\r\n          />\r\n        </svg>\r\n        <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\r\n          <span className=\"text-2xl font-bold font-[Orbitron] text-white\">{Math.round(progress)}%</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 text-center\">\r\n        <p className=\"text-lg font-semibold text-white\">{value}</p>\r\n        <p className=\"text-sm text-gray-400\">{label}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Dashboard() {\r\n  // Mock data - replace with real data later\r\n  const metrics = {\r\n    totalEstimated: 15250,\r\n    totalSpent: 8430,\r\n    remainingItems: 12,\r\n    completedItems: 8\r\n  };\r\n\r\n  const completionPercentage = (metrics.completedItems / (metrics.completedItems + metrics.remainingItems)) * 100;\r\n  const spentPercentage = (metrics.totalSpent / metrics.totalEstimated) * 100;\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold font-[Orbitron] bg-gradient-to-r from-[var(--neon-blue)] to-[var(--neon-purple)] bg-clip-text text-transparent\">\r\n            Purchase Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-400 mt-2\">Track your spending and manage your purchase list</p>\r\n        </div>\r\n        <button className=\"px-6 py-3 bg-gradient-to-r from-[var(--neon-blue)] to-[var(--neon-purple)] rounded-lg font-semibold text-white hover:shadow-lg hover:shadow-[var(--neon-blue)]/25 transition-all duration-300\">\r\n          Add New Item\r\n        </button>\r\n      </div>\r\n\r\n      {/* Metrics Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <MetricCard\r\n          title=\"Total Estimated Cost\"\r\n          value={`$${metrics.totalEstimated.toLocaleString()}`}\r\n          subtitle=\"Across all items\"\r\n          glowColor=\"blue\"\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\r\n            </svg>\r\n          }\r\n          trend={{ value: 12, isPositive: true }}\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Total Spent\"\r\n          value={`$${metrics.totalSpent.toLocaleString()}`}\r\n          subtitle={`${spentPercentage.toFixed(1)}% of budget`}\r\n          glowColor=\"purple\"\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n            </svg>\r\n          }\r\n          trend={{ value: 8, isPositive: false }}\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Remaining Items\"\r\n          value={metrics.remainingItems}\r\n          subtitle=\"To be purchased\"\r\n          glowColor=\"green\"\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4\" />\r\n            </svg>\r\n          }\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Completed Items\"\r\n          value={metrics.completedItems}\r\n          subtitle=\"Successfully purchased\"\r\n          glowColor=\"orange\"\r\n          icon={\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n            </svg>\r\n          }\r\n          trend={{ value: 25, isPositive: true }}\r\n        />\r\n      </div>\r\n\r\n      {/* Progress Visualization */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Completion Progress */}\r\n        <div className=\"glass rounded-xl p-8 glow-blue\">\r\n          <h3 className=\"text-xl font-bold font-[Orbitron] text-white mb-6 text-center\">\r\n            Purchase Progress\r\n          </h3>\r\n          <div className=\"flex justify-center\">\r\n            <ProgressRing\r\n              progress={completionPercentage}\r\n              size={200}\r\n              strokeWidth={12}\r\n              color=\"var(--neon-blue)\"\r\n              label=\"Items Completed\"\r\n              value={`${metrics.completedItems}/${metrics.completedItems + metrics.remainingItems}`}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Budget Progress */}\r\n        <div className=\"glass rounded-xl p-8 glow-purple\">\r\n          <h3 className=\"text-xl font-bold font-[Orbitron] text-white mb-6 text-center\">\r\n            Budget Utilization\r\n          </h3>\r\n          <div className=\"flex justify-center\">\r\n            <ProgressRing\r\n              progress={spentPercentage}\r\n              size={200}\r\n              strokeWidth={12}\r\n              color=\"var(--neon-purple)\"\r\n              label=\"Budget Used\"\r\n              value={`$${metrics.totalSpent.toLocaleString()}`}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"glass rounded-xl p-6 glow-green\">\r\n        <h3 className=\"text-xl font-bold font-[Orbitron] text-white mb-4\">Recent Activity</h3>\r\n        <div className=\"space-y-3\">\r\n          {[\r\n            { action: 'Added', item: 'Gaming Headset', price: '$89.99', time: '2 hours ago' },\r\n            { action: 'Purchased', item: 'Mechanical Keyboard', price: '$159.99', time: '5 hours ago' },\r\n            { action: 'Updated', item: 'Monitor Stand', price: '$45.00', time: '1 day ago' },\r\n          ].map((activity, index) => (\r\n            <div key={index} className=\"flex items-center justify-between p-3 bg-gray-800/30 rounded-lg\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className={`w-2 h-2 rounded-full ${\r\n                  activity.action === 'Added' ? 'bg-blue-400' :\r\n                  activity.action === 'Purchased' ? 'bg-green-400' : 'bg-yellow-400'\r\n                }`} />\r\n                <span className=\"text-white font-medium\">{activity.action}</span>\r\n                <span className=\"text-gray-300\">{activity.item}</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-4\">\r\n                <span className=\"text-[var(--neon-green)] font-semibold\">{activity.price}</span>\r\n                <span className=\"text-gray-400 text-sm\">{activity.time}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}